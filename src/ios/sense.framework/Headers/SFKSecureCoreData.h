//
//  SFKSecureCoreDataFactory.h
//  sense-sdk-ios-framework
//
//  Created by Marc-Henri Primault on 23.05.14.
//  Copyright (c) 2014 Sysmosoft. All rights reserved.
//

#import "SFKSecureCoreDataProtocol.h"

@interface SFKSecureCoreData : NSObject

/**
 *  Define if the storage is available
 *
 *  @return YES if the storage is available otherwise NO
 */
+ (BOOL)isAvailable;

/**
 *  Manage the encryption of your Core Data database
 *
 *  The default store path is Documents/SQLCipher and the default bundle path is the main bundle path.
 *  Secure Core Data uses an autogenerated key and persists it to secure your SQLite database.
 *
 *  @return The secure Core Data otherwise returns nil
 */
+ (id<SFKSecureCoreDataProtocol>)secureCoreData;

/**
 *  Manage the encryption of your core Core Data database
 *
 *  @param key        The key to secure your SQLite database. The key must be 32 bytes long (256 Bits).
 *                    If the key is not valid, Secure Core Data uses an autogenerated key and persists it.
 *                    If the key is nil, Secure Core Data uses an autogenerated key and persists it.
 *  @param bundlePath The path of the bundle where your xcdatamodel files are stored.
 *                    If the path is not an absolute path, Secure Core Data uses the main bundle path.
 *                    If the path is nil, Secure Core Data uses the main bundle path.
 *  @param storePath  The path where you want to store your sqlite file.
 *                    If the path is not an absolute path, Secure Core Data uses the default path Documents/SQLCipher.
 *                    If the path is nil, Secure Core Data uses the default path Documents/SQLCipher.
 *
 *  @return The secure Core Data otherwise returns nil
 */
+ (id<SFKSecureCoreDataProtocol>)secureCoreDataWithKey:(NSData *)key bundlePath:(NSString *)bundlePath storePath:(NSString *)storePath;

@end
